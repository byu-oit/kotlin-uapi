diff -urN -x '*.iml' -x 'target/*' 2-main-class/pom.xml 3-user-context/pom.xml
--- 2-main-class/pom.xml	2018-11-07 15:10:34.000000000 -0700
+++ 3-user-context/pom.xml	2018-11-07 15:10:34.000000000 -0700
@@ -4,11 +4,11 @@
     <modelVersion>4.0.0</modelVersion>
 
     <groupId>edu.byu.uapi.library</groupId>
-    <artifactId>tutorial-2-main-class</artifactId>
+    <artifactId>tutorial-3-user-context</artifactId>
     <version>1.0-SNAPSHOT</version>
     <packaging>jar</packaging>
 
-    <name>library-tutorial-api 2-main-class</name>
+    <name>library-tutorial-api 3-user-context</name>
     <properties>
         <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
         <kotlin.version>1.3.0</kotlin.version>
@@ -35,6 +35,10 @@
             <groupId>edu.byu.uapi.kotlin.http</groupId>
             <artifactId>spark-http-adapter</artifactId>
         </dependency>
+        <dependency>
+            <groupId>edu.byu.uapi.kotlin.utilities</groupId>
+            <artifactId>jwt-extensions</artifactId>
+        </dependency>
 
         <dependency>
             <groupId>edu.byu.uapi.kotlin.examples</groupId>
@@ -84,6 +88,14 @@
                 <version>1.6.0</version>
                 <configuration>
                     <mainClass>LibraryAppKt</mainClass>
+
+                    <systemProperties>
+                        <systemProperty>
+                            <key>ENV</key>
+                            <value>local</value>
+                        </systemProperty>
+                    </systemProperties>
+
                 </configuration>
             </plugin>
         </plugins>
diff -urN -x '*.iml' -x 'target/*' 2-main-class/src/main/kotlin/LibraryApp.kt 3-user-context/src/main/kotlin/LibraryApp.kt
--- 2-main-class/src/main/kotlin/LibraryApp.kt	2018-11-07 15:10:34.000000000 -0700
+++ 3-user-context/src/main/kotlin/LibraryApp.kt	2018-11-07 15:10:34.000000000 -0700
@@ -1,9 +1,22 @@
 import edu.byu.uapi.http.spark.startSpark
 import edu.byu.uapi.library.LibraryUserContextFactory
 import edu.byu.uapi.server.UAPIRuntime
+import edu.byu.uapi.utilities.jwt.OnlyUseOnYourPersonalDevMachineBearerTokenUserContextFactory
+
+//Look for system property or environment variable named 'ENV'
+private val environment = System.getProperty("ENV") ?: System.getenv("ENV") ?: "production"
+private val isLocalDevelopment = environment == "local"
 
 fun main(args: Array<String>) {
-    val runtime = UAPIRuntime(LibraryUserContextFactory())
+    val libraryUserFactory = LibraryUserContextFactory()
+
+    val actualUserFactory = if (isLocalDevelopment) {
+        OnlyUseOnYourPersonalDevMachineBearerTokenUserContextFactory(libraryUserFactory)
+    } else {
+        libraryUserFactory
+    }
+
+    val runtime = UAPIRuntime(actualUserFactory)
 
     // All of our configuration is going to go here
 
diff -urN -x '*.iml' -x 'target/*' 2-main-class/src/main/kotlin/edu/byu/uapi/library/LibraryUser.kt 3-user-context/src/main/kotlin/edu/byu/uapi/library/LibraryUser.kt
--- 2-main-class/src/main/kotlin/edu/byu/uapi/library/LibraryUser.kt	2018-11-07 15:10:34.000000000 -0700
+++ 3-user-context/src/main/kotlin/edu/byu/uapi/library/LibraryUser.kt	2018-11-07 15:35:11.000000000 -0700
@@ -1,13 +1,39 @@
 package edu.byu.uapi.library
 
+import edu.byu.jwt.ByuJwt
+import edu.byu.uapi.kotlin.examples.library.Library
 import edu.byu.uapi.server.UserContextAuthnInfo
-import edu.byu.uapi.server.UserContextFactory
 import edu.byu.uapi.server.UserContextResult
+import edu.byu.uapi.utilities.jwt.JwtUserContextFactory
 
-class LibraryUser
+class LibraryUser(
+  val netId: String,
+  val cardholderId: Int?,
+  val isLibrarian: Boolean
+) {
+    val isCardholder = cardholderId != null
+}
+
+private val librarianNetIds = setOf("jmooreoa", "{your NetId here}")
+
+class LibraryUserContextFactory: JwtUserContextFactory<LibraryUser>() {
+    override fun createUserContext(
+        authenticationInfo: UserContextAuthnInfo,
+        currentJwt: ByuJwt,
+        originalJwt: ByuJwt?
+    ): UserContextResult<LibraryUser> {
+        val netId = currentJwt.resourceOwnerClaims?.netId ?: currentJwt.clientClaims.netId
+
+        if (netId == null) {
+            return UserContextResult.Failure("No NetID was provided.")
+        }
+
+        val cardholderId = Library.getCardholderIdForNetId(netId)
 
-class LibraryUserContextFactory: UserContextFactory<LibraryUser> {
-    override fun createUserContext(authenticationInfo: UserContextAuthnInfo): UserContextResult<LibraryUser> {
-        TODO("not implemented")
+        return UserContextResult.Success(LibraryUser(
+            netId = netId,
+            cardholderId = cardholderId,
+            isLibrarian = netId in librarianNetIds
+        ))
     }
 }
