<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>edu.byu.uapi.kotlin</groupId>
    <artifactId>kotlin-uapi-pom</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>Kotlin UAPI Parent POM</name>

    <prerequisites>
        <maven>3.5</maven>
    </prerequisites>

    <distributionManagement>
        <repository>
            <id>byu-release-repo</id>
            <name>BYU Release Repository</name>
            <url>https://developer.byu.edu/maven2/content/repositories/byu-release-repo</url>
        </repository>
        <snapshotRepository>
            <id>byu-snapshot-repo</id>
            <name>BYU Snapshot Repository</name>
            <url>https://developer.byu.edu/maven2/content/repositories/byu-snapshot-repo</url>
        </snapshotRepository>
    </distributionManagement>

    <modules>
        <module>core</module>
        <module>http</module>
        <module>utilities</module>
        <module>bom</module>
        <module>examples</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <kotlin.version>1.3.10</kotlin.version>
        <!-- Knowns how to read Kotlinc-generated @Metadata annotations -->
        <kotlin.metadata.version>1.4.0</kotlin.metadata.version>
        <!-- Faster compiles, as long as you don't do a `mvn clean` every time -->
        <kotlin.compiler.incremental>true</kotlin.compiler.incremental>

        <!-- Process and validate JWTs -->
        <byu.jwt.version>2.1.0-SNAPSHOT</byu.jwt.version>

        <!-- Guava because, well, Guava. -->
        <util.guava.version>27.0.1-jre</util.guava.version>

        <logging.slf4j.version>1.7.25</logging.slf4j.version>

        <json.javax.api.version>1.1.4</json.javax.api.version>
        <json.javax.impl.version>1.1.4</json.javax.impl.version>
        <json.jackson.version>2.9.6</json.jackson.version>

        <!-- Hibernate validation and associated dependencies -->
        <validation.javax.version>2.0.1.Final</validation.javax.version>
        <validation.hibernate.version>6.0.13.Final</validation.hibernate.version>
        <validation.javax-el.version>3.0.1-b10</validation.javax-el.version>

        <!-- sparkjava.com -->
        <http.spark.version>2.8.0</http.spark.version>

        <!-- Knows how to generate valid Java source code -->
        <annotations.javapoet.version>1.11.1</annotations.javapoet.version>
        <!-- Common annotation-processing stuff -->
        <annotations.auto-common.version>0.10</annotations.auto-common.version>
        <!-- Automatically generate Java service meta files -->
        <annotations.auto-service.version>1.0-rc4</annotations.auto-service.version>

        <test.kotlintest.version>3.1.10</test.kotlintest.version>
        <test.mockito.version>2.23.4</test.mockito.version>
        <test.mockitokotlin.version>2.0.0</test.mockitokotlin.version>
        <test.junit.platform.version>1.3.1</test.junit.platform.version>
        <test.junit.version>5.3.1</test.junit.version>
        <!-- Utilities for testing annotation processors -->
        <test.google.compile.version>0.15</test.google.compile.version>

        <plugins.enforcer.version>3.0.0-M2</plugins.enforcer.version>
        <plugins.enforcer.requireMaven>3.5</plugins.enforcer.requireMaven>
        <plugins.enforcer.requireJava>1.8.0</plugins.enforcer.requireJava>

        <plugins.kotlin.version>${kotlin.version}</plugins.kotlin.version>
        <plugins.compiler.version>3.8.0</plugins.compiler.version>
        <plugins.surefire.version>2.22.1</plugins.surefire.version>
        <plugins.dependency.version>3.1.1</plugins.dependency.version>
        <plugins.shade.version>3.2.1</plugins.shade.version>
        <plugins.source.version>3.0.1</plugins.source.version>

        <!-- Set to `false` in a sub-pom to disable unused dependency checking. You probably shouldn't do that. -->
        <dependencies.checkUnused>true</dependencies.checkUnused>
    </properties>

    <repositories>
        <repository>
            <id>jitpack.io</id>
            <url>https://jitpack.io</url>
        </repository>
        <repository>
            <id>kotlin-eap</id>
            <url>https://dl.bintray.com/kotlin/kotlin-eap</url>
        </repository>
    </repositories>

    <dependencyManagement>
        <dependencies>
            <!-- Kotlin -->
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-stdlib</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-stdlib-jdk8</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-reflect</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>me.eugeniomarletti.kotlin.metadata</groupId>
                <artifactId>kotlin-metadata</artifactId>
                <version>${kotlin.metadata.version}</version>
            </dependency>

            <!-- BYU -->
            <dependency>
                <groupId>edu.byu.jwt</groupId>
                <artifactId>byu-jwt</artifactId>
                <version>${byu.jwt.version}</version>
            </dependency>

            <!-- Logging -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${logging.slf4j.version}</version>
            </dependency>

            <!-- Utilities -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${util.guava.version}</version>
            </dependency>

            <!-- JSON -->
            <dependency>
                <groupId>javax.json</groupId>
                <artifactId>javax.json-api</artifactId>
                <version>${json.javax.api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish</groupId>
                <artifactId>javax.json</artifactId>
                <version>${json.javax.impl.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${json.jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${json.jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${json.jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.module</groupId>
                <artifactId>jackson-module-kotlin</artifactId>
                <version>${json.jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jdk8</artifactId>
                <version>${json.jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jsr310</artifactId>
                <version>${json.jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.module</groupId>
                <artifactId>jackson-module-afterburner</artifactId>
                <version>${json.jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.module</groupId>
                <artifactId>jackson-module-jsonSchema</artifactId>
                <version>${json.jackson.version}</version>
            </dependency>

            <!-- Validation -->
            <dependency>
                <groupId>javax.validation</groupId>
                <artifactId>validation-api</artifactId>
                <version>${validation.javax.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.validator</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${validation.hibernate.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish</groupId>
                <artifactId>javax.el</artifactId>
                <version>${validation.javax-el.version}</version>
                <scope>runtime</scope>
            </dependency>

            <!-- HTTP Servers -->
            <dependency>
                <groupId>com.sparkjava</groupId>
                <artifactId>spark-core</artifactId>
                <version>${http.spark.version}</version>
            </dependency>

            <!-- Annotation Processing -->
            <dependency>
                <groupId>com.squareup</groupId>
                <artifactId>javapoet</artifactId>
                <version>${annotations.javapoet.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.auto</groupId>
                <artifactId>auto-common</artifactId>
                <version>${annotations.auto-common.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.auto.service</groupId>
                <artifactId>auto-service</artifactId>
                <version>${annotations.auto-service.version}</version>
                <optional>true</optional>
            </dependency>

            <!-- Test -->
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-test-junit5</artifactId>
                <version>${kotlin.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${test.junit.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-test</artifactId>
                <version>${kotlin.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>io.kotlintest</groupId>
                <artifactId>kotlintest-core</artifactId>
                <version>${test.kotlintest.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.kotlintest</groupId>
                <artifactId>kotlintest-assertions</artifactId>
                <version>${test.kotlintest.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.kotlintest</groupId>
                <artifactId>kotlintest-runner-junit5</artifactId>
                <version>${test.kotlintest.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${test.mockito.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>com.nhaarman.mockitokotlin2</groupId>
                <artifactId>mockito-kotlin</artifactId>
                <version>${test.mockitokotlin.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-simple</artifactId>
                <version>${logging.slf4j.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.google.testing.compile</groupId>
                <artifactId>compile-testing</artifactId>
                <version>${test.google.compile.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>${plugins.enforcer.version}</version>
                <inherited>true</inherited>
                <executions>
                    <execution>
                        <id>enforce-maven</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>${plugins.enforcer.requireMaven}</version>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <version>${plugins.enforcer.requireJava}</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <version>${plugins.kotlin.version}</version>
                <inherited>true</inherited>
                <configuration>
                    <jvmTarget>1.8</jvmTarget>
                </configuration>
                <executions>
                    <execution>
                        <id>compile</id>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
                                <sourceDir>${project.basedir}/src/main/java</sourceDir>
                            </sourceDirs>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
                                <sourceDir>${project.basedir}/src/test/java</sourceDir>
                            </sourceDirs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${plugins.compiler.version}</version>
                <inherited>true</inherited>
                <executions>
                    <!-- Replacing default-compile as it is treated specially by maven -->
                    <execution>
                        <id>default-compile</id>
                        <phase>none</phase>
                    </execution>
                    <!-- Replacing default-testCompile as it is treated specially by maven -->
                    <execution>
                        <id>default-testCompile</id>
                        <phase>none</phase>
                    </execution>
                    <execution>
                        <id>java-compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>java-test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${plugins.surefire.version}</version>
                <inherited>true</inherited>
                <configuration>
                    <includes>
                        <include>**/*Test*</include>
                        <include>**/*Spec*</include>
                    </includes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${plugins.dependency.version}</version>
                <executions>
                    <execution>
                        <id>analyze</id>
                        <goals>
                            <goal>analyze-only</goal>
                        </goals>
                        <configuration>
                            <failOnWarning>${dependencies.checkUnused}</failOnWarning>
                            <ignoreNonCompile>true</ignoreNonCompile>
                            <ignoredDependencies>
                                <ignoredDependency>org.jetbrains:annotations</ignoredDependency>
                                <ignoredDependency>com.google.code.findbugs:jsr305</ignoredDependency>
                            </ignoredDependencies>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${plugins.source.version}</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>${plugins.shade.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>
